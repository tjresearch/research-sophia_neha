#
# Neha Bagalkot
# February 14, 2020
# eucdist_2-14-20.py
#

import pandas
from scipy.spatial import distance
'''with open("VID_TEST_CASE_9_ANGLES.csv", 'r') as csvfile:
    nba = pandas.read_csv(csvfile)
print(nba.columns.values) # The names of all the columns in the data.'''
data = []
def angle_parse (i):
    filepath = "../output/output_angle_calc/VID_TEST_CASE_{0:}_angles.txt".format(i)
    f = open(filepath, 'r')
    #print(f.readline().strip())
    with open(filepath) as f:
        for line in f:
            m = line[1:-2]
            oldl = (m.split(', '))
            newl = []
            for j in oldl:
                if len(j)>=1:
                    newl.append(float(j))
            if len(newl) == 26:
                data.append(newl)

angle_parse(9)
print(data)

cluster_centers = [[1.30601759e+02, 1.30131407e+02, 9.38234251e+01, 1.11878326e+02,
   1.61369944e+02, 8.68107200e+01, 1.14217955e+02, 1.50113251e+02,
   1.64039690e+02, 9.17886776e+01, 8.75267714e+01, 9.06816794e+01,
   8.86450153e+01, 1.66885269e+02, 1.40807106e+02, 1.31610121e+02,
   8.93302448e+01, 9.49098184e+01, 1.64286131e+02, 1.44339829e+02,
   1.33625249e+02, 1.74912654e+02, 1.43187066e+02, 2.37190048e+01,
   6.73000980e+01, 4.84677544e+01],
 [5.68434189e-14, -7.10542736e-14, -2.84217094e-14, 5.19581721e+00,
   1.25437470e+01, -1.42108547e-14, 7.22533748e+01, 1.57254560e+02,
   5.68434189e-14, -8.52651283e-14, 5.68434189e-14, 7.10542736e-14,
  -4.26325641e-14, 0.00000000e+00, 1.42108547e-14, -4.26325641e-14,
   5.68434189e-14, -5.68434189e-14, -2.84217094e-14, 2.84217094e-14,
   4.26325641e-14, -8.52651283e-14, 4.26325641e-14, 3.55271368e-15,
  -2.84217094e-14, 2.06119203e-07],
 [1.39399731e+02, 1.20318283e+02, 8.12803050e+01, 1.00239816e+02,
   1.22696500e+02, 9.52003116e+01, 1.05878897e+02, 1.06991683e+02,
   1.56753436e+02, 8.90243732e+01, 9.51229758e+01, 8.87377922e+01,
   1.08135451e+02, 1.48139927e+02, 1.39743379e+02, 1.11594202e+02,
   9.37902771e+01, 1.01914924e+02, 1.39305825e+02, 1.45061925e+02,
   1.17221043e+02, 1.67527200e+02, 4.12718686e+01, 4.05348032e+01,
   4.50109557e+01, 6.29856665e+01],
[-3.26849658e-13, 2.27373675e-13, 1.27897692e-13, 1.42108547e-13,
  -1.98951966e-13, 1.84741111e-13, -1.84741111e-13, 1.70530257e-13,
  -1.98951966e-13, -7.10542736e-14, 1.27897692e-13, 2.91652592e+01,
   9.01086010e+01, 7.06694233e+01, 3.91831428e+01, 3.73539156e+01,
   1.51212080e+02, 1.04062207e+02, 1.04294489e+02, 4.01206446e+01,
   3.18246105e+01, 2.55795385e-13, 2.08801083e-07, 4.69994903e+01,
   2.08801204e-07, -1.20792265e-13],
 [ 5.63619050e+00, 1.76575752e+01, 1.58388416e+02, 1.22626678e+02,
   1.50363643e+02, 1.64760071e+01, 1.12671469e+02, 1.29808604e+02,
   1.06426696e+02, 8.63948472e+01, 9.24756185e+01, 9.38501789e+01,
   1.03434664e+02, 1.68936932e+02, 1.59707775e+02, 1.19632080e+02,
   8.69510050e+01, 1.02178994e+02, 1.66563387e+02, 1.51529619e+02,
   1.22624271e+02, 1.70996099e+02, 1.21710323e+02, 3.52758214e+01,
   6.34286261e+01, 4.30064487e+01],
 [ 8.95141659e-02, 7.46167883e-01, 4.17330518e+00, 8.00069104e+01,
   1.32990741e+02, 1.75266337e+02, 1.03027400e+02, 1.64134383e+02,
   8.86706855e+01, 8.51616452e+01, 9.24390470e+01, 9.08924416e+01,
   8.95380066e+01, 1.53459541e+02, 1.22534301e+02, 1.16071857e+02,
   8.78070474e+01, 9.23719104e+01, 1.54817174e+02, 1.15110464e+02,
   1.26090090e+02, 1.76704601e+02, 1.63048419e+02, 1.09880296e+01,
   7.87506995e+01, 3.92926128e+01]]

sequence = []
def seq(angdata):
    for frame in angdata:
        mindist = 10000000000000000000000000000000000000000000000000000000000000000000000000
        mincenter = -1
        for center in cluster_centers:
            d = distance.euclidean(frame, center)
            print(d)
            if d <mindist:
                mincenter = cluster_centers.index(center)
        sequence.append(mincenter)

seq(data)
print(sequence)